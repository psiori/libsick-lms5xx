@PACKAGE_INIT@

#message(STATUS "Sick PACKAGE_PREFIX_DIR=${PACKAGE_PREFIX_DIR}")
set_and_check(SickLMS5xx_INCLUDE_DIR "@PACKAGE_INCLUDE_INSTALL_DIR@")
set_and_check(SickLMS5xx_LIBRARY_DIR "@PACKAGE_LIBRARY_INSTALL_DIR@")

# configure-time branch on BUILD_SHARED_LIBS: how to do it better?
if (@BUILD_SHARED_LIBS@)
    set_and_check(SickLMS5xx_LIBRARY "@PACKAGE_LIBRARY_INSTALL_DIR@libsick-lms5xx${CMAKE_SHARED_LIBRARY_SUFFIX}")
else()
    set_and_check(SickLMS5xx_LIBRARY "@PACKAGE_LIBRARY_INSTALL_DIR@/libsick-lms5xx${CMAKE_STATIC_LIBRARY_SUFFIX}")
endif()
set(SickLMS5xx_LIBRARIES ${SickLMS5xx_LIBRARY})

# Source the target definitions if this package is used as a binary rather than built
# alongside the client project. CMAKE_CURRENT_LIST_DIR in that context will be the dir
# where this package installs its cmake files (aka INSTALL_CONFIGDIR in main
# CMakeLists.txt)
if(NOT TARGET SickLMS5xx::SickLMS5xx)
  include("${CMAKE_CURRENT_LIST_DIR}/SickLMS5xxTargets.cmake")
endif()

# Have to come last as they modify some variable used above.
include(CMakeFindDependencyMacro)
find_dependency(Eigen3 3.3.4 REQUIRED)
find_dependency(PCL 1.11 REQUIRED COMPONENTS common io)
# link the deps so that client projects get them also
# target_link_libraries(SickLMS5xx::SickLMS5xx INTERFACE Eigen3::Eigen pcl_common pcl_io)
# target_include_directories(SickLMS5xx::SickLMS5xx INTERFACE $<INSTALL_INTERFACE:include>)
